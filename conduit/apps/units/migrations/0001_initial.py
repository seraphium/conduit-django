# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2017-05-19 06:50
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type', models.SmallIntegerField()),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('voltage', models.CharField(db_index=True, max_length=32)),
                ('phonenum', models.CharField(db_index=True, max_length=32)),
                ('backphonenum', models.CharField(blank=True, max_length=32)),
                ('backphoneused', models.BooleanField(default=False, max_length=32)),
                ('sn', models.CharField(db_index=True, max_length=32)),
                ('location', models.CharField(db_index=True, max_length=32)),
                ('towerfrom', models.IntegerField()),
                ('towerto', models.IntegerField()),
                ('idintower', models.IntegerField()),
                ('identity', models.CharField(blank=True, max_length=64)),
                ('temperature', models.IntegerField()),
                ('protocolversion', models.IntegerField()),
                ('hardwareversion', models.IntegerField()),
                ('lat', models.FloatField()),
                ('lng', models.FloatField()),
                ('unsync', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('status', models.SmallIntegerField()),
                ('powerstatus', models.SmallIntegerField()),
                ('gprsstatus', models.SmallIntegerField()),
                ('carrier', models.SmallIntegerField()),
                ('backupcarrier', models.SmallIntegerField()),
                ('vendor', models.SmallIntegerField()),
                ('remark', models.CharField(blank=True, max_length=255)),
                ('operators', models.ManyToManyField(related_name='units', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ownedunits', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='units.Unit')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UnitAlertSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('alertdistance1', models.IntegerField()),
                ('alertdistance2', models.IntegerField()),
                ('alertdistance3', models.IntegerField()),
                ('picresolution', models.CharField(default='800x600', max_length=32)),
                ('picenable', models.BooleanField(default=True)),
                ('piclightenhance', models.BooleanField(default=True)),
                ('highsensitivity', models.BooleanField(default=False)),
                ('beep', models.BooleanField(default=True)),
                ('weather', models.BooleanField(default=False)),
                ('mode', models.IntegerField()),
                ('camera1mode', models.SmallIntegerField()),
                ('camera1videoduration', models.SmallIntegerField()),
                ('camera1videoframerate', models.SmallIntegerField()),
                ('camera1mediainterval', models.SmallIntegerField()),
                ('camera2mode', models.SmallIntegerField()),
                ('camera2videoduration', models.SmallIntegerField()),
                ('camera2videoframerate', models.SmallIntegerField()),
                ('camera2mediainterval', models.SmallIntegerField()),
                ('camera3mode', models.SmallIntegerField()),
                ('camera3videoduration', models.SmallIntegerField()),
                ('camera3videoframerate', models.SmallIntegerField()),
                ('camera3mediainterval', models.SmallIntegerField()),
                ('unit', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='units.Unit')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UnitNetworkSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('serverip', models.CharField(default='121.41.25.64', max_length=32)),
                ('serverport', models.IntegerField()),
                ('transfertype', models.SmallIntegerField()),
                ('networktype', models.SmallIntegerField()),
                ('apn', models.CharField(blank=True, max_length=32)),
                ('apnusername', models.CharField(blank=True, max_length=32)),
                ('apnpassword', models.CharField(blank=True, max_length=32)),
                ('timeout', models.IntegerField()),
                ('retrycount', models.IntegerField()),
                ('resetcount', models.IntegerField()),
                ('csq', models.IntegerField()),
                ('networkstatus', models.IntegerField()),
                ('unit', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='units.Unit')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'abstract': False,
            },
        ),
    ]
