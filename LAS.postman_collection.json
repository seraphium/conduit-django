{
	"id": "536b3e64-6e35-ecf6-0aca-4724b6d0e0f2",
	"name": "LAS",
	"description": "Collection for testing the Conduit API",
	"order": [],
	"folders": [
		{
			"id": "a16230e3-fa92-d0db-8b74-659f131e3dca",
			"name": "Articles",
			"description": "",
			"order": [
				"7d8e514e-3052-1243-4ca5-136e44d6701c",
				"4c64ccf1-b093-3a46-fbca-ee9d498fbb64",
				"cb4038a1-ef70-fc6b-9035-efb5b5e8a395",
				"2689291a-b169-5db6-fc69-8c42cdbc4ca1",
				"053dd68f-5587-f944-9e82-9455dcdbee1e",
				"aaaa6df8-217b-669a-129f-0e9bd25b7426",
				"996082c1-a2a3-23f8-732b-8535ea88e620",
				"11df4795-3a83-a25c-64c2-ffc5462cc481",
				"0f14feb3-e8e3-4ecf-8260-7e206189bab3",
				"cba6db56-2381-0fff-7ffb-267419083b80",
				"e2053fa7-d7e6-8263-b13a-d1f7a530708a"
			],
			"owner": "1081252"
		},
		{
			"id": "021073c6-f262-34af-bda1-56dae893023b",
			"name": "Auth",
			"description": "",
			"order": [
				"4691639a-5ebb-e1ec-5197-aae060ab713c",
				"f72cd966-27d7-e8d1-c44f-cf263c0a7294",
				"7c36f7ef-c553-246a-6b71-33267f0c7521",
				"d4ab6068-2dfa-b62a-c4d0-07d4bc8c2d62"
			],
			"owner": "1081252"
		},
		{
			"id": "4cb32da4-4ab9-034f-f904-c4ed0ba2a66c",
			"name": "Comments",
			"description": "",
			"order": [
				"ac808ff8-f08b-784c-1917-9580cff93761",
				"9350dab8-497a-defb-54b8-e99778250a28",
				"2773b8e7-9c5a-076f-f0e8-4e93771a0cdc"
			],
			"owner": "1081252"
		},
		{
			"id": "315d75c8-0c6b-e555-3b7e-f7f1e5e4c0e0",
			"name": "Profiles",
			"description": "",
			"order": [
				"29246195-90e2-60bc-4905-12679feeec1c",
				"e1096c9a-0ab7-c806-9b74-c8d03fcb374d",
				"61b755d8-2d1f-4850-506f-16421307b33c"
			],
			"owner": "1081252"
		},
		{
			"id": "63f55489-1291-33fd-51ad-a7a11dfd1934",
			"name": "Tags",
			"description": "",
			"order": [
				"9a61355b-5fae-27f6-fcd0-7db3fcce026c"
			],
			"owner": "1081252"
		}
	],
	"timestamp": 1495100609963,
	"owner": "1081252",
	"public": false,
	"requests": [
		{
			"id": "053dd68f-5587-f944-9e82-9455dcdbee1e",
			"name": "Articles by Tag",
			"description": "",
			"collectionId": "536b3e64-6e35-ecf6-0aca-4724b6d0e0f2",
			"method": "GET",
			"headers": "Content-Type: application/json",
			"data": [],
			"rawModeData": "",
			"pathVariables": {},
			"tests": "var is200Response = responseCode.code === 200;\n\ntests['Response code is 200 OK'] = is200Response;\n\nif(is200Response){\n    var responseJSON = JSON.parse(responseBody);\n\n    tests['Response contains \"articles\" property'] = responseJSON.hasOwnProperty('articles');\n    tests['Response contains \"articlesCount\" property'] = responseJSON.hasOwnProperty('articlesCount');\n    tests['articlesCount is an integer'] = Number.isInteger(responseJSON.articlesCount);\n\n    if(responseJSON.articles.length){\n        var article = responseJSON.articles[0];\n\n        tests['Article has \"title\" property'] = article.hasOwnProperty('title');\n        tests['Article has \"slug\" property'] = article.hasOwnProperty('slug');\n        tests['Article has \"body\" property'] = article.hasOwnProperty('body');\n        tests['Article has \"createdAt\" property'] = article.hasOwnProperty('createdAt');\n        tests['Article\\'s \"createdAt\" property is an ISO 8601 timestamp'] = new Date(article.createdAt).toISOString() === article.createdAt;\n        tests['Article has \"updatedAt\" property'] = article.hasOwnProperty('updatedAt');\n        tests['Article\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = new Date(article.updatedAt).toISOString() === article.updatedAt;\n        tests['Article has \"description\" property'] = article.hasOwnProperty('description');\n        tests['Article has \"tagList\" property'] = article.hasOwnProperty('tagList');\n        tests['Article\\'s \"tagList\" property is an Array'] = Array.isArray(article.tagList);\n        tests['Article has \"author\" property'] = article.hasOwnProperty('author');\n        tests['Article has \"favorited\" property'] = article.hasOwnProperty('favorited');\n        tests['Article has \"favoritesCount\" property'] = article.hasOwnProperty('favoritesCount');\n        tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);\n    } else {\n        tests['articlesCount is 0 when feed is empty'] = responseJSON.articlesCount === 0;\n    }\n}\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/articles?tag=dragons",
			"responses": [],
			"folder": "a16230e3-fa92-d0db-8b74-659f131e3dca"
		},
		{
			"id": "0f14feb3-e8e3-4ecf-8260-7e206189bab3",
			"name": "Update Article",
			"description": "",
			"collectionId": "536b3e64-6e35-ecf6-0aca-4724b6d0e0f2",
			"method": "PUT",
			"headers": "Content-Type: application/json\nAuthorization: Token {{token}}",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\"article\":{\"body\":\"With two hands\"}}",
			"pathVariables": {},
			"tests": "var responseJSON = JSON.parse(responseBody);\n\ntests['Response contains \"article\" property'] = responseJSON.hasOwnProperty('article');\n\nvar article = responseJSON.article || {};\n\ntests['Article has \"title\" property'] = article.hasOwnProperty('title');\ntests['Article has \"slug\" property'] = article.hasOwnProperty('slug');\ntests['Article has \"body\" property'] = article.hasOwnProperty('body');\ntests['Article has \"createdAt\" property'] = article.hasOwnProperty('createdAt');\ntests['Article\\'s \"createdAt\" property is an ISO 8601 timestamp'] = new Date(article.createdAt).toISOString() === article.createdAt;\ntests['Article has \"updatedAt\" property'] = article.hasOwnProperty('updatedAt');\ntests['Article\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = new Date(article.updatedAt).toISOString() === article.updatedAt;\ntests['Article has \"description\" property'] = article.hasOwnProperty('description');\ntests['Article has \"tagList\" property'] = article.hasOwnProperty('tagList');\ntests['Article\\'s \"tagList\" property is an Array'] = Array.isArray(article.tagList);\ntests['Article has \"author\" property'] = article.hasOwnProperty('author');\ntests['Article has \"favorited\" property'] = article.hasOwnProperty('favorited');\ntests['Article has \"favoritesCount\" property'] = article.hasOwnProperty('favoritesCount');\ntests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/articles/how-to-train-your-dragon",
			"responses": [],
			"folder": "a16230e3-fa92-d0db-8b74-659f131e3dca"
		},
		{
			"id": "11df4795-3a83-a25c-64c2-ffc5462cc481",
			"name": "Delete Article",
			"description": "",
			"collectionId": "536b3e64-6e35-ecf6-0aca-4724b6d0e0f2",
			"method": "DELETE",
			"headers": "Content-Type: application/json\nAuthorization: Token {{token}}",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "",
			"pathVariables": {},
			"url": "{{apiUrl}}/articles/how-to-train-your-dragon",
			"responses": [],
			"folder": "a16230e3-fa92-d0db-8b74-659f131e3dca"
		},
		{
			"id": "2689291a-b169-5db6-fc69-8c42cdbc4ca1",
			"name": "Articles Favorited by Username",
			"description": "",
			"collectionId": "536b3e64-6e35-ecf6-0aca-4724b6d0e0f2",
			"method": "GET",
			"headers": "Content-Type: application/json",
			"data": [],
			"rawModeData": "",
			"pathVariables": {},
			"tests": "var is200Response = responseCode.code === 200;\n\ntests['Response code is 200 OK'] = is200Response;\n\nif(is200Response){\n    var responseJSON = JSON.parse(responseBody);\n    \n    tests['Response contains \"articles\" property'] = responseJSON.hasOwnProperty('articles');\n    tests['Response contains \"articlesCount\" property'] = responseJSON.hasOwnProperty('articlesCount');\n    tests['articlesCount is an integer'] = Number.isInteger(responseJSON.articlesCount);\n\n    if(responseJSON.articles.length){\n        var article = responseJSON.articles[0];\n\n        tests['Article has \"title\" property'] = article.hasOwnProperty('title');\n        tests['Article has \"slug\" property'] = article.hasOwnProperty('slug');\n        tests['Article has \"body\" property'] = article.hasOwnProperty('body');\n        tests['Article has \"createdAt\" property'] = article.hasOwnProperty('createdAt');\n        tests['Article\\'s \"createdAt\" property is an ISO 8601 timestamp'] = new Date(article.createdAt).toISOString() === article.createdAt;\n        tests['Article has \"updatedAt\" property'] = article.hasOwnProperty('updatedAt');\n        tests['Article\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = new Date(article.updatedAt).toISOString() === article.updatedAt;\n        tests['Article has \"description\" property'] = article.hasOwnProperty('description');\n        tests['Article has \"tagList\" property'] = article.hasOwnProperty('tagList');\n        tests['Article\\'s \"tagList\" property is an Array'] = Array.isArray(article.tagList);\n        tests['Article has \"author\" property'] = article.hasOwnProperty('author');\n        tests['Article has \"favorited\" property'] = article.hasOwnProperty('favorited');\n        tests['Article has \"favoritesCount\" property'] = article.hasOwnProperty('favoritesCount');\n        tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);\n    } else {\n        tests['articlesCount is 0 when feed is empty'] = responseJSON.articlesCount === 0;\n    }\n}\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/articles?favorited=jack",
			"responses": [],
			"folder": "a16230e3-fa92-d0db-8b74-659f131e3dca"
		},
		{
			"id": "2773b8e7-9c5a-076f-f0e8-4e93771a0cdc",
			"name": "Delete Comment for Article",
			"description": "",
			"collectionId": "536b3e64-6e35-ecf6-0aca-4724b6d0e0f2",
			"method": "DELETE",
			"headers": "Content-Type: application/json\nAuthorization: Token {{token}}",
			"data": [],
			"rawModeData": "",
			"pathVariables": {},
			"url": "{{apiUrl}}/articles/how-to-train-your-dragon/comments/1",
			"responses": [],
			"folder": "4cb32da4-4ab9-034f-f904-c4ed0ba2a66c"
		},
		{
			"id": "29246195-90e2-60bc-4905-12679feeec1c",
			"name": "Profile",
			"description": "",
			"collectionId": "536b3e64-6e35-ecf6-0aca-4724b6d0e0f2",
			"method": "GET",
			"headers": "Content-Type: application/json",
			"data": [],
			"rawModeData": "",
			"pathVariables": {},
			"tests": "var is200Response = responseCode.code === 200;\n\ntests['Response code is 200 OK'] = is200Response;\n\nif(is200Response){\n    var responseJSON = JSON.parse(responseBody);\n\n    tests['Response contains \"profile\" property'] = responseJSON.hasOwnProperty('profile');\n    \n    var profile = responseJSON.profile || {};\n    \n    tests['Profile has \"username\" property'] = profile.hasOwnProperty('username');\n    tests['Profile has \"bio\" property'] = profile.hasOwnProperty('bio');\n    tests['Profile has \"image\" property'] = profile.hasOwnProperty('image');\n    tests['Profile has \"following\" property'] = profile.hasOwnProperty('following');\n}\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/profiles/johnjacob",
			"responses": [],
			"folder": "315d75c8-0c6b-e555-3b7e-f7f1e5e4c0e0"
		},
		{
			"id": "4691639a-5ebb-e1ec-5197-aae060ab713c",
			"name": "Login and Remember Token",
			"description": "",
			"collectionId": "536b3e64-6e35-ecf6-0aca-4724b6d0e0f2",
			"method": "POST",
			"headers": "Content-Type: application/json",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\"user\":{\"email\":\"john@jacob.com\", \"password\":\"johnnyjacob\"}}",
			"pathVariables": {},
			"tests": "var responseJSON = JSON.parse(responseBody);\n\ntests['Response contains \"user\" property'] = responseJSON.hasOwnProperty('user');\n\nvar user = responseJSON.user || {};\n\ntests['User has \"id\" property'] = user.hasOwnProperty('id');\ntests['User has \"email\" property'] = user.hasOwnProperty('email');\ntests['User has \"username\" property'] = user.hasOwnProperty('username');\ntests['User has \"bio\" property'] = user.hasOwnProperty('bio');\ntests['User has \"image\" property'] = user.hasOwnProperty('image');\ntests['User has \"token\" property'] = user.hasOwnProperty('token');\n\nif(tests['User has \"token\" property']){\n    postman.setEnvironmentVariable('token', user.token);\n}\n\ntests['Environment variable \"token\" has been set'] = environment.token === user.token;\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/users/login",
			"responses": [],
			"folder": "021073c6-f262-34af-bda1-56dae893023b"
		},
		{
			"id": "4c64ccf1-b093-3a46-fbca-ee9d498fbb64",
			"name": "All Articles",
			"description": "",
			"collectionId": "536b3e64-6e35-ecf6-0aca-4724b6d0e0f2",
			"method": "GET",
			"headers": "Content-Type: application/json",
			"data": [],
			"rawModeData": "",
			"pathVariables": {},
			"tests": "var is200Response = responseCode.code === 200;\n\ntests['Response code is 200 OK'] = is200Response;\n\nif(is200Response){\n    var responseJSON = JSON.parse(responseBody);\n\n    tests['Response contains \"articles\" property'] = responseJSON.hasOwnProperty('articles');\n    tests['Response contains \"articlesCount\" property'] = responseJSON.hasOwnProperty('articlesCount');\n    tests['articlesCount is an integer'] = Number.isInteger(responseJSON.articlesCount);\n\n    if(responseJSON.articles.length){\n        var article = responseJSON.articles[0];\n\n        tests['Article has \"title\" property'] = article.hasOwnProperty('title');\n        tests['Article has \"slug\" property'] = article.hasOwnProperty('slug');\n        tests['Article has \"body\" property'] = article.hasOwnProperty('body');\n        tests['Article has \"createdAt\" property'] = article.hasOwnProperty('createdAt');\n        tests['Article\\'s \"createdAt\" property is an ISO 8601 timestamp'] = new Date(article.createdAt).toISOString() === article.createdAt;\n        tests['Article has \"updatedAt\" property'] = article.hasOwnProperty('updatedAt');\n        tests['Article\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = new Date(article.updatedAt).toISOString() === article.updatedAt;\n        tests['Article has \"description\" property'] = article.hasOwnProperty('description');\n        tests['Article has \"tagList\" property'] = article.hasOwnProperty('tagList');\n        tests['Article\\'s \"tagList\" property is an Array'] = Array.isArray(article.tagList);\n        tests['Article has \"author\" property'] = article.hasOwnProperty('author');\n        tests['Article has \"favorited\" property'] = article.hasOwnProperty('favorited');\n        tests['Article has \"favoritesCount\" property'] = article.hasOwnProperty('favoritesCount');\n        tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);\n    } else {\n        tests['articlesCount is 0 when feed is empty'] = responseJSON.articlesCount === 0;\n    }\n}\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/articles",
			"responses": [],
			"folder": "a16230e3-fa92-d0db-8b74-659f131e3dca"
		},
		{
			"id": "61b755d8-2d1f-4850-506f-16421307b33c",
			"name": "Unfollow Profile",
			"description": "",
			"collectionId": "536b3e64-6e35-ecf6-0aca-4724b6d0e0f2",
			"method": "DELETE",
			"headers": "Content-Type: application/json\nAuthorization: Token {{token}}",
			"data": [],
			"rawModeData": "",
			"pathVariables": {},
			"tests": "var responseJSON = JSON.parse(responseBody);\n\ntests['Response contains \"profile\" property'] = responseJSON.hasOwnProperty('profile');\n\nvar profile = responseJSON.profile || {};\n\ntests['Profile has \"username\" property'] = profile.hasOwnProperty('username');\ntests['Profile has \"bio\" property'] = profile.hasOwnProperty('bio');\ntests['Profile has \"image\" property'] = profile.hasOwnProperty('image');\ntests['Profile has \"following\" property'] = profile.hasOwnProperty('following');\ntests['Profile\\'s \"following\" property is false'] = profile.following === false;",
			"preRequestScript": "",
			"url": "{{apiUrl}}/profiles/jack/follow",
			"responses": [],
			"folder": "315d75c8-0c6b-e555-3b7e-f7f1e5e4c0e0"
		},
		{
			"id": "7c36f7ef-c553-246a-6b71-33267f0c7521",
			"name": "Current User",
			"description": "",
			"collectionId": "536b3e64-6e35-ecf6-0aca-4724b6d0e0f2",
			"method": "GET",
			"headers": "Content-Type: application/json\nAuthorization: Token {{token}}",
			"data": [],
			"rawModeData": "",
			"pathVariables": {},
			"tests": "var responseJSON = JSON.parse(responseBody);\n\ntests['Response contains \"user\" property'] = responseJSON.hasOwnProperty('user');\n\nvar user = responseJSON.user || {};\n\ntests['User has \"id\" property'] = user.hasOwnProperty('id');\ntests['User has \"email\" property'] = user.hasOwnProperty('email');\ntests['User has \"username\" property'] = user.hasOwnProperty('username');\ntests['User has \"bio\" property'] = user.hasOwnProperty('bio');\ntests['User has \"image\" property'] = user.hasOwnProperty('image');\ntests['User has \"token\" property'] = user.hasOwnProperty('token');\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/user",
			"responses": [],
			"folder": "021073c6-f262-34af-bda1-56dae893023b"
		},
		{
			"id": "7d8e514e-3052-1243-4ca5-136e44d6701c",
			"name": "Feed",
			"description": "",
			"collectionId": "536b3e64-6e35-ecf6-0aca-4724b6d0e0f2",
			"method": "GET",
			"headers": "Content-Type: application/json\nAuthorization: Token {{token}}",
			"data": [],
			"rawModeData": "",
			"pathVariables": {},
			"tests": "var is200Response = responseCode.code === 200;\n\ntests['Response code is 200 OK'] = is200Response;\n\nif(is200Response){\n    var responseJSON = JSON.parse(responseBody);\n\n    tests['Response contains \"articles\" property'] = responseJSON.hasOwnProperty('articles');\n    tests['Response contains \"articlesCount\" property'] = responseJSON.hasOwnProperty('articlesCount');\n    tests['articlesCount is an integer'] = Number.isInteger(responseJSON.articlesCount);\n\n    if(responseJSON.articles.length){\n        var article = responseJSON.articles[0];\n\n        tests['Article has \"title\" property'] = article.hasOwnProperty('title');\n        tests['Article has \"slug\" property'] = article.hasOwnProperty('slug');\n        tests['Article has \"body\" property'] = article.hasOwnProperty('body');\n        tests['Article has \"createdAt\" property'] = article.hasOwnProperty('createdAt');\n        tests['Article\\'s \"createdAt\" property is an ISO 8601 timestamp'] = new Date(article.createdAt).toISOString() === article.createdAt;\n        tests['Article has \"updatedAt\" property'] = article.hasOwnProperty('updatedAt');\n        tests['Article\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = new Date(article.updatedAt).toISOString() === article.updatedAt;\n        tests['Article has \"description\" property'] = article.hasOwnProperty('description');\n        tests['Article has \"tagList\" property'] = article.hasOwnProperty('tagList');\n        tests['Article\\'s \"tagList\" property is an Array'] = Array.isArray(article.tagList);\n        tests['Article has \"author\" property'] = article.hasOwnProperty('author');\n        tests['Article has \"favorited\" property'] = article.hasOwnProperty('favorited');\n        tests['Article has \"favoritesCount\" property'] = article.hasOwnProperty('favoritesCount');\n        tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);\n    } else {\n        tests['articlesCount is 0 when feed is empty'] = responseJSON.articlesCount === 0;\n    }\n}\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/articles/feed",
			"responses": [],
			"folder": "a16230e3-fa92-d0db-8b74-659f131e3dca"
		},
		{
			"id": "9350dab8-497a-defb-54b8-e99778250a28",
			"name": "Create Comment for Article",
			"description": "",
			"collectionId": "536b3e64-6e35-ecf6-0aca-4724b6d0e0f2",
			"method": "POST",
			"headers": "Content-Type: application/json\nAuthorization: Token {{token}}",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\"comment\":{\"body\":\"Thank you so much!\"}}",
			"pathVariables": {},
			"tests": "var responseJSON = JSON.parse(responseBody);\n\ntests['Response contains \"comment\" property'] = responseJSON.hasOwnProperty('comment');\n\nvar comment = responseJSON.comment || {};\n\ntests['Comment has \"id\" property'] = comment.hasOwnProperty('id');\ntests['Comment has \"body\" property'] = comment.hasOwnProperty('body');\ntests['Comment has \"createdAt\" property'] = comment.hasOwnProperty('createdAt');\ntests['\"createdAt\" property is an ISO 8601 timestamp'] = new Date(comment.createdAt).toISOString() === comment.createdAt;\ntests['Comment has \"updatedAt\" property'] = comment.hasOwnProperty('updatedAt');\ntests['\"updatedAt\" property is an ISO 8601 timestamp'] = new Date(comment.updatedAt).toISOString() === comment.updatedAt;\ntests['Comment has \"author\" property'] = comment.hasOwnProperty('author');\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/articles/how-to-train-your-dragon/comments",
			"responses": [],
			"folder": "4cb32da4-4ab9-034f-f904-c4ed0ba2a66c"
		},
		{
			"id": "996082c1-a2a3-23f8-732b-8535ea88e620",
			"name": "Single Article by slug",
			"description": "",
			"collectionId": "536b3e64-6e35-ecf6-0aca-4724b6d0e0f2",
			"method": "GET",
			"headers": "Content-Type: application/json",
			"data": [],
			"rawModeData": "",
			"pathVariables": {},
			"tests": "var responseJSON = JSON.parse(responseBody);\n\ntests['Response contains \"article\" property'] = responseJSON.hasOwnProperty('article');\n\nvar article = responseJSON.article || {};\n\ntests['Article has \"title\" property'] = article.hasOwnProperty('title');\ntests['Article has \"slug\" property'] = article.hasOwnProperty('slug');\ntests['Article has \"body\" property'] = article.hasOwnProperty('body');\ntests['Article has \"createdAt\" property'] = article.hasOwnProperty('createdAt');\ntests['Article\\'s \"createdAt\" property is an ISO 8601 timestamp'] = new Date(article.createdAt).toISOString() === article.createdAt;\ntests['Article has \"updatedAt\" property'] = article.hasOwnProperty('updatedAt');\ntests['Article\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = new Date(article.updatedAt).toISOString() === article.updatedAt;\ntests['Article has \"description\" property'] = article.hasOwnProperty('description');\ntests['Article has \"tagList\" property'] = article.hasOwnProperty('tagList');\ntests['Article\\'s \"tagList\" property is an Array'] = Array.isArray(article.tagList);\ntests['Article has \"author\" property'] = article.hasOwnProperty('author');\ntests['Article has \"favorited\" property'] = article.hasOwnProperty('favorited');\ntests['Article has \"favoritesCount\" property'] = article.hasOwnProperty('favoritesCount');\ntests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/articles/how-to-train-your-dragon",
			"responses": [],
			"folder": "a16230e3-fa92-d0db-8b74-659f131e3dca"
		},
		{
			"id": "9a61355b-5fae-27f6-fcd0-7db3fcce026c",
			"name": "All Tags",
			"description": "",
			"collectionId": "536b3e64-6e35-ecf6-0aca-4724b6d0e0f2",
			"method": "GET",
			"headers": "Content-Type: application/json\nAuthorization: Token {{token}}",
			"data": [],
			"rawModeData": "",
			"pathVariables": {},
			"tests": "var is200Response = responseCode.code === 200;\n\ntests['Response code is 200 OK'] = is200Response;\n\nif(is200Response){\n    var responseJSON = JSON.parse(responseBody);\n    \n    tests['Response contains \"tags\" property'] = responseJSON.hasOwnProperty('tags');\n    tests['\"tags\" property returned as array'] = Array.isArray(responseJSON.tags);\n}\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/tags",
			"responses": [],
			"folder": "63f55489-1291-33fd-51ad-a7a11dfd1934"
		},
		{
			"id": "aaaa6df8-217b-669a-129f-0e9bd25b7426",
			"name": "Create Article",
			"description": "",
			"collectionId": "536b3e64-6e35-ecf6-0aca-4724b6d0e0f2",
			"method": "POST",
			"headers": "Content-Type: application/json\nAuthorization: Token {{token}}",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\"article\":{\"title\":\"How to train your dragon\", \"body\":\"Very carefully.\", \"tagList\":[\"dragons\",\"training\"]}}",
			"pathVariables": {},
			"tests": "var responseJSON = JSON.parse(responseBody);\n\ntests['Response contains \"article\" property'] = responseJSON.hasOwnProperty('article');\n\nvar article = responseJSON.article || {};\n\ntests['Article has \"title\" property'] = article.hasOwnProperty('title');\ntests['Article has \"slug\" property'] = article.hasOwnProperty('slug');\ntests['Article has \"body\" property'] = article.hasOwnProperty('body');\ntests['Article has \"createdAt\" property'] = article.hasOwnProperty('createdAt');\ntests['Article\\'s \"createdAt\" property is an ISO 8601 timestamp'] = new Date(article.createdAt).toISOString() === article.createdAt;\ntests['Article has \"updatedAt\" property'] = article.hasOwnProperty('updatedAt');\ntests['Article\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = new Date(article.updatedAt).toISOString() === article.updatedAt;\ntests['Article has \"description\" property'] = article.hasOwnProperty('description');\ntests['Article has \"tagList\" property'] = article.hasOwnProperty('tagList');\ntests['Article\\'s \"tagList\" property is an Array'] = Array.isArray(article.tagList);\ntests['Article has \"author\" property'] = article.hasOwnProperty('author');\ntests['Article has \"favorited\" property'] = article.hasOwnProperty('favorited');\ntests['Article has \"favoritesCount\" property'] = article.hasOwnProperty('favoritesCount');\ntests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/articles",
			"responses": [],
			"folder": "a16230e3-fa92-d0db-8b74-659f131e3dca"
		},
		{
			"id": "ac808ff8-f08b-784c-1917-9580cff93761",
			"name": "All Comments for Article",
			"description": "",
			"collectionId": "536b3e64-6e35-ecf6-0aca-4724b6d0e0f2",
			"method": "GET",
			"headers": "Content-Type: application/json",
			"data": [],
			"rawModeData": "",
			"pathVariables": {},
			"tests": "var is200Response = responseCode.code === 200\n\ntests['Response code is 200 OK'] = is200Response;\n\nif(is200Response){\n    var responseJSON = JSON.parse(responseBody);\n\n    tests['Response contains \"comments\" property'] = responseJSON.hasOwnProperty('comments');\n\n    if(responseJSON.comments.length){\n        var comment = responseJSON.comments[0];\n\n        tests['Comment has \"id\" property'] = comment.hasOwnProperty('id');\n        tests['Comment has \"body\" property'] = comment.hasOwnProperty('body');\n        tests['Comment has \"createdAt\" property'] = comment.hasOwnProperty('createdAt');\n        tests['\"createdAt\" property is an ISO 8601 timestamp'] = new Date(comment.createdAt).toISOString() === comment.createdAt;\n        tests['Comment has \"updatedAt\" property'] = comment.hasOwnProperty('updatedAt');\n        tests['\"updatedAt\" property is an ISO 8601 timestamp'] = new Date(comment.updatedAt).toISOString() === comment.updatedAt;\n        tests['Comment has \"author\" property'] = comment.hasOwnProperty('author');\n    }\n}\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/articles/how-to-train-your-dragon/comments",
			"responses": [],
			"folder": "4cb32da4-4ab9-034f-f904-c4ed0ba2a66c"
		},
		{
			"id": "cb4038a1-ef70-fc6b-9035-efb5b5e8a395",
			"name": "Articles by Author",
			"description": "",
			"collectionId": "536b3e64-6e35-ecf6-0aca-4724b6d0e0f2",
			"method": "GET",
			"headers": "Content-Type: application/json",
			"data": [],
			"rawModeData": "",
			"pathVariables": {},
			"tests": "var is200Response = responseCode.code === 200;\n\ntests['Response code is 200 OK'] = is200Response;\n\nif(is200Response){\n    var responseJSON = JSON.parse(responseBody);\n\n    tests['Response contains \"articles\" property'] = responseJSON.hasOwnProperty('articles');\n    tests['Response contains \"articlesCount\" property'] = responseJSON.hasOwnProperty('articlesCount');\n    tests['articlesCount is an integer'] = Number.isInteger(responseJSON.articlesCount);\n\n    if(responseJSON.articles.length){\n        var article = responseJSON.articles[0];\n\n        tests['Article has \"title\" property'] = article.hasOwnProperty('title');\n        tests['Article has \"slug\" property'] = article.hasOwnProperty('slug');\n        tests['Article has \"body\" property'] = article.hasOwnProperty('body');\n        tests['Article has \"createdAt\" property'] = article.hasOwnProperty('createdAt');\n        tests['Article\\'s \"createdAt\" property is an ISO 8601 timestamp'] = new Date(article.createdAt).toISOString() === article.createdAt;\n        tests['Article has \"updatedAt\" property'] = article.hasOwnProperty('updatedAt');\n        tests['Article\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = new Date(article.updatedAt).toISOString() === article.updatedAt;\n        tests['Article has \"description\" property'] = article.hasOwnProperty('description');\n        tests['Article has \"tagList\" property'] = article.hasOwnProperty('tagList');\n        tests['Article\\'s \"tagList\" property is an Array'] = Array.isArray(article.tagList);\n        tests['Article has \"author\" property'] = article.hasOwnProperty('author');\n        tests['Article has \"favorited\" property'] = article.hasOwnProperty('favorited');\n        tests['Article has \"favoritesCount\" property'] = article.hasOwnProperty('favoritesCount');\n        tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);\n    } else {\n        tests['articlesCount is 0 when feed is empty'] = responseJSON.articlesCount === 0;\n    }\n}\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/articles?author=jack",
			"responses": [],
			"folder": "a16230e3-fa92-d0db-8b74-659f131e3dca"
		},
		{
			"id": "cba6db56-2381-0fff-7ffb-267419083b80",
			"name": "Favorite Article",
			"description": "",
			"collectionId": "536b3e64-6e35-ecf6-0aca-4724b6d0e0f2",
			"method": "POST",
			"headers": "Content-Type: application/json\nAuthorization: Token {{token}}",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "",
			"pathVariables": {},
			"tests": "var responseJSON = JSON.parse(responseBody);\n\ntests['Response contains \"article\" property'] = responseJSON.hasOwnProperty('article');\n\nvar article = responseJSON.article || {};\n\ntests['Article has \"title\" property'] = article.hasOwnProperty('title');\ntests['Article has \"slug\" property'] = article.hasOwnProperty('slug');\ntests['Article has \"body\" property'] = article.hasOwnProperty('body');\ntests['Article has \"createdAt\" property'] = article.hasOwnProperty('createdAt');\ntests['Article\\'s \"createdAt\" property is an ISO 8601 timestamp'] = new Date(article.createdAt).toISOString() === article.createdAt;\ntests['Article has \"updatedAt\" property'] = article.hasOwnProperty('updatedAt');\ntests['Article\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = new Date(article.updatedAt).toISOString() === article.updatedAt;\ntests['Article has \"description\" property'] = article.hasOwnProperty('description');\ntests['Article has \"tagList\" property'] = article.hasOwnProperty('tagList');\ntests['Article\\'s \"tagList\" property is an Array'] = Array.isArray(article.tagList);\ntests['Article has \"author\" property'] = article.hasOwnProperty('author');\ntests['Article has \"favorited\" property'] = article.hasOwnProperty('favorited');\ntests[\"Article's 'favorited' property is true\"] = article.favorited === true;\ntests['Article has \"favoritesCount\" property'] = article.hasOwnProperty('favoritesCount');\ntests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);\ntests[\"Article's 'favoritesCount' property is greater than 0\"] = article.favoritesCount > 0;\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/articles/how-to-train-your-dragon/favorite",
			"responses": [],
			"folder": "a16230e3-fa92-d0db-8b74-659f131e3dca"
		},
		{
			"id": "d4ab6068-2dfa-b62a-c4d0-07d4bc8c2d62",
			"name": "Update User",
			"description": "",
			"collectionId": "536b3e64-6e35-ecf6-0aca-4724b6d0e0f2",
			"method": "PUT",
			"headers": "Content-Type: application/json\nAuthorization: Token {{token}}",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\"user\":{\"email\":\"john@jacob.com\"}}",
			"pathVariables": {},
			"tests": "var responseJSON = JSON.parse(responseBody);\n\ntests['Response contains \"user\" property'] = responseJSON.hasOwnProperty('user');\n\nvar user = responseJSON.user || {};\n\ntests['User has \"id\" property'] = user.hasOwnProperty('id');\ntests['User has \"email\" property'] = user.hasOwnProperty('email');\ntests['User has \"username\" property'] = user.hasOwnProperty('username');\ntests['User has \"bio\" property'] = user.hasOwnProperty('bio');\ntests['User has \"image\" property'] = user.hasOwnProperty('image');\ntests['User has \"token\" property'] = user.hasOwnProperty('token');\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/user",
			"responses": [],
			"folder": "021073c6-f262-34af-bda1-56dae893023b"
		},
		{
			"id": "e1096c9a-0ab7-c806-9b74-c8d03fcb374d",
			"name": "Follow Profile",
			"description": "",
			"collectionId": "536b3e64-6e35-ecf6-0aca-4724b6d0e0f2",
			"method": "POST",
			"headers": "Content-Type: application/json\nAuthorization: Token {{token}}",
			"data": [],
			"rawModeData": "",
			"pathVariables": {},
			"url": "{{apiUrl}}/profiles/jack/follow",
			"responses": [],
			"folder": "315d75c8-0c6b-e555-3b7e-f7f1e5e4c0e0"
		},
		{
			"id": "e2053fa7-d7e6-8263-b13a-d1f7a530708a",
			"name": "Unfavorite Article",
			"description": "",
			"collectionId": "536b3e64-6e35-ecf6-0aca-4724b6d0e0f2",
			"method": "DELETE",
			"headers": "Content-Type: application/json\nAuthorization: Token {{token}}",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "",
			"pathVariables": {},
			"tests": "var responseJSON = JSON.parse(responseBody);\n\ntests['Response contains \"article\" property'] = responseJSON.hasOwnProperty('article');\n\nvar article = responseJSON.article || {};\n\ntests['Article has \"title\" property'] = article.hasOwnProperty('title');\ntests['Article has \"slug\" property'] = article.hasOwnProperty('slug');\ntests['Article has \"body\" property'] = article.hasOwnProperty('body');\ntests['Article has \"createdAt\" property'] = article.hasOwnProperty('createdAt');\ntests['Article\\'s \"createdAt\" property is an ISO 8601 timestamp'] = new Date(article.createdAt).toISOString() === article.createdAt;\ntests['Article has \"updatedAt\" property'] = article.hasOwnProperty('updatedAt');\ntests['Article\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = new Date(article.updatedAt).toISOString() === article.updatedAt;\ntests['Article has \"description\" property'] = article.hasOwnProperty('description');\ntests['Article has \"tagList\" property'] = article.hasOwnProperty('tagList');\ntests['Article\\'s \"tagList\" property is an Array'] = Array.isArray(article.tagList);\ntests['Article has \"author\" property'] = article.hasOwnProperty('author');\ntests['Article has \"favorited\" property'] = article.hasOwnProperty('favorited');\ntests['Article has \"favoritesCount\" property'] = article.hasOwnProperty('favoritesCount');\ntests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);\ntests[\"Article's \\\"favorited\\\" property is true\"] = article.favorited === false;\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/articles/how-to-train-your-dragon/favorite",
			"responses": [],
			"folder": "a16230e3-fa92-d0db-8b74-659f131e3dca"
		},
		{
			"id": "f72cd966-27d7-e8d1-c44f-cf263c0a7294",
			"name": "Register",
			"description": "",
			"collectionId": "536b3e64-6e35-ecf6-0aca-4724b6d0e0f2",
			"method": "POST",
			"headers": "Content-Type: application/json",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\"user\":{\"email\":\"john@jacob.com\", \"password\":\"johnnyjacob\", \"username\":\"johnjacob\"}}",
			"pathVariables": {},
			"tests": "var responseJSON = JSON.parse(responseBody);\n\ntests['Response contains \"user\" property'] = responseJSON.hasOwnProperty('user');\n\nvar user = responseJSON.user || {};\n\ntests['User has \"id\" property'] = user.hasOwnProperty('id');\ntests['User has \"email\" property'] = user.hasOwnProperty('email');\ntests['User has \"username\" property'] = user.hasOwnProperty('username');\ntests['User has \"bio\" property'] = user.hasOwnProperty('bio');\ntests['User has \"image\" property'] = user.hasOwnProperty('image');\ntests['User has \"token\" property'] = user.hasOwnProperty('token');\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/users",
			"responses": [],
			"folder": "021073c6-f262-34af-bda1-56dae893023b"
		}
	]
}