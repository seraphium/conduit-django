{
	"id": "478c3c91-1baf-5e1c-c2e9-82b4eb3697f3",
	"name": "LAS",
	"description": "Collection for testing the Conduit API",
	"order": [],
	"folders": [
		{
			"id": "b0d4ea73-8044-e698-4a38-b7761e618c0c",
			"name": "Auth",
			"description": "",
			"order": [
				"3fef2717-e09a-1bb5-bb05-ce7a385e308a",
				"f1a1cf78-2555-fd8e-b530-26a41063a42a",
				"87540037-28b7-912c-39ae-5e80ccee07ec",
				"5f05c878-3a95-e445-7a52-b0966de455e8"
			],
			"owner": 0
		},
		{
			"id": "e0d006fc-434a-6454-90be-674ba6c423e9",
			"name": "Comments",
			"description": "",
			"order": [
				"9ce023c4-cf08-4e29-86eb-c1ed7529a24c",
				"2198ac43-44eb-05d4-8a6d-a54bc8021305",
				"b71d4313-989d-493e-c31d-b9706f8388d9"
			],
			"owner": 0
		},
		{
			"id": "ecf28a77-b8ba-dbe7-8414-22068309c960",
			"name": "Profiles",
			"description": "",
			"order": [
				"0a0f2e47-1aee-56f3-7229-ea2baf791a37",
				"3a1d5f19-30ec-6045-52cf-0153c0c5bffe",
				"35d8232c-5437-a74a-3fe9-0aab005b1d7a"
			],
			"owner": 0
		},
		{
			"id": "3ed19ee5-3ef2-5d4c-34d7-a2055bbe8cff",
			"name": "Tags",
			"description": "",
			"order": [
				"457099b5-9aa7-5141-403b-2b3373ad5fe9"
			],
			"owner": 0
		},
		{
			"id": "4264e955-a40f-fe79-695f-c887996f5b55",
			"name": "Units",
			"description": "",
			"order": [
				"0b6c7bf4-4296-d41a-5778-ae1b6dd8469c",
				"98b543e0-aa5c-04cc-fe7c-00754b154a00",
				"9f415dd9-be5b-d2dc-74f2-3bb3b18ff41c",
				"fcf0c53c-7b69-1344-86e9-3ab401785172",
				"0e0ff48b-d1b1-1f80-a97d-715e54c25710",
				"e2b58cea-164a-6f7e-475f-f5e7cd5445c8",
				"4697ae3c-b900-3021-7962-877e1fe09cf1",
				"dcad3f3e-c913-c5e0-1ec4-3506ed9043f5"
			],
			"owner": 0,
			"collectionId": "478c3c91-1baf-5e1c-c2e9-82b4eb3697f3"
		}
	],
	"timestamp": 1495100609963,
	"owner": 0,
	"public": false,
	"requests": [
		{
			"id": "0a0f2e47-1aee-56f3-7229-ea2baf791a37",
			"name": "Profile",
			"description": "",
			"collectionId": "478c3c91-1baf-5e1c-c2e9-82b4eb3697f3",
			"method": "GET",
			"headers": "Content-Type: application/json",
			"data": [],
			"rawModeData": "",
			"pathVariables": {},
			"tests": "var is200Response = responseCode.code === 200;\n\ntests['Response code is 200 OK'] = is200Response;\n\nif(is200Response){\n    var responseJSON = JSON.parse(responseBody);\n\n    tests['Response contains \"profile\" property'] = responseJSON.hasOwnProperty('profile');\n    \n    var profile = responseJSON.profile || {};\n    \n    tests['Profile has \"username\" property'] = profile.hasOwnProperty('username');\n    tests['Profile has \"bio\" property'] = profile.hasOwnProperty('bio');\n    tests['Profile has \"image\" property'] = profile.hasOwnProperty('image');\n    tests['Profile has \"following\" property'] = profile.hasOwnProperty('following');\n}\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/profiles/johnjacob",
			"responses": [],
			"folder": "ecf28a77-b8ba-dbe7-8414-22068309c960"
		},
		{
			"id": "0b6c7bf4-4296-d41a-5778-ae1b6dd8469c",
			"name": "All Units",
			"description": "",
			"collectionId": "478c3c91-1baf-5e1c-c2e9-82b4eb3697f3",
			"method": "GET",
			"headers": "Content-Type: application/json",
			"data": [],
			"rawModeData": "",
			"pathVariables": {},
			"tests": "var is200Response = responseCode.code === 200;\n\ntests['Response code is 200 OK'] = is200Response;\n\nif(is200Response){\n    var responseJSON = JSON.parse(responseBody);\n\n    tests['Response contains \"articles\" property'] = responseJSON.hasOwnProperty('articles');\n    tests['Response contains \"articlesCount\" property'] = responseJSON.hasOwnProperty('articlesCount');\n    tests['articlesCount is an integer'] = Number.isInteger(responseJSON.articlesCount);\n\n    if(responseJSON.articles.length){\n        var article = responseJSON.articles[0];\n\n        tests['Article has \"title\" property'] = article.hasOwnProperty('title');\n        tests['Article has \"slug\" property'] = article.hasOwnProperty('slug');\n        tests['Article has \"body\" property'] = article.hasOwnProperty('body');\n        tests['Article has \"createdAt\" property'] = article.hasOwnProperty('createdAt');\n        tests['Article\\'s \"createdAt\" property is an ISO 8601 timestamp'] = new Date(article.createdAt).toISOString() === article.createdAt;\n        tests['Article has \"updatedAt\" property'] = article.hasOwnProperty('updatedAt');\n        tests['Article\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = new Date(article.updatedAt).toISOString() === article.updatedAt;\n        tests['Article has \"description\" property'] = article.hasOwnProperty('description');\n        tests['Article has \"tagList\" property'] = article.hasOwnProperty('tagList');\n        tests['Article\\'s \"tagList\" property is an Array'] = Array.isArray(article.tagList);\n        tests['Article has \"author\" property'] = article.hasOwnProperty('author');\n        tests['Article has \"favorited\" property'] = article.hasOwnProperty('favorited');\n        tests['Article has \"favoritesCount\" property'] = article.hasOwnProperty('favoritesCount');\n        tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);\n    } else {\n        tests['articlesCount is 0 when feed is empty'] = responseJSON.articlesCount === 0;\n    }\n}\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/articles",
			"responses": [],
			"folder": "4264e955-a40f-fe79-695f-c887996f5b55"
		},
		{
			"id": "0e0ff48b-d1b1-1f80-a97d-715e54c25710",
			"name": "Delete Article",
			"description": "",
			"collectionId": "478c3c91-1baf-5e1c-c2e9-82b4eb3697f3",
			"method": "DELETE",
			"headers": "Content-Type: application/json\nAuthorization: Token {{token}}",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "",
			"pathVariables": {},
			"url": "{{apiUrl}}/articles/how-to-train-your-dragon",
			"responses": [],
			"folder": "4264e955-a40f-fe79-695f-c887996f5b55",
			"preRequestScript": "",
			"tests": ""
		},
		{
			"id": "2198ac43-44eb-05d4-8a6d-a54bc8021305",
			"name": "Create Comment for Article",
			"description": "",
			"collectionId": "478c3c91-1baf-5e1c-c2e9-82b4eb3697f3",
			"method": "POST",
			"headers": "Content-Type: application/json\nAuthorization: Token {{token}}",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\"comment\":{\"body\":\"Thank you so much!\"}}",
			"pathVariables": {},
			"tests": "var responseJSON = JSON.parse(responseBody);\n\ntests['Response contains \"comment\" property'] = responseJSON.hasOwnProperty('comment');\n\nvar comment = responseJSON.comment || {};\n\ntests['Comment has \"id\" property'] = comment.hasOwnProperty('id');\ntests['Comment has \"body\" property'] = comment.hasOwnProperty('body');\ntests['Comment has \"createdAt\" property'] = comment.hasOwnProperty('createdAt');\ntests['\"createdAt\" property is an ISO 8601 timestamp'] = new Date(comment.createdAt).toISOString() === comment.createdAt;\ntests['Comment has \"updatedAt\" property'] = comment.hasOwnProperty('updatedAt');\ntests['\"updatedAt\" property is an ISO 8601 timestamp'] = new Date(comment.updatedAt).toISOString() === comment.updatedAt;\ntests['Comment has \"author\" property'] = comment.hasOwnProperty('author');\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/articles/how-to-train-your-dragon/comments",
			"responses": [],
			"folder": "e0d006fc-434a-6454-90be-674ba6c423e9"
		},
		{
			"id": "35d8232c-5437-a74a-3fe9-0aab005b1d7a",
			"name": "Unfollow Profile",
			"description": "",
			"collectionId": "478c3c91-1baf-5e1c-c2e9-82b4eb3697f3",
			"method": "DELETE",
			"headers": "Content-Type: application/json\nAuthorization: Token {{token}}",
			"data": [],
			"rawModeData": "",
			"pathVariables": {},
			"tests": "var responseJSON = JSON.parse(responseBody);\n\ntests['Response contains \"profile\" property'] = responseJSON.hasOwnProperty('profile');\n\nvar profile = responseJSON.profile || {};\n\ntests['Profile has \"username\" property'] = profile.hasOwnProperty('username');\ntests['Profile has \"bio\" property'] = profile.hasOwnProperty('bio');\ntests['Profile has \"image\" property'] = profile.hasOwnProperty('image');\ntests['Profile has \"following\" property'] = profile.hasOwnProperty('following');\ntests['Profile\\'s \"following\" property is false'] = profile.following === false;",
			"preRequestScript": "",
			"url": "{{apiUrl}}/profiles/jack/follow",
			"responses": [],
			"folder": "ecf28a77-b8ba-dbe7-8414-22068309c960"
		},
		{
			"id": "3a1d5f19-30ec-6045-52cf-0153c0c5bffe",
			"name": "Follow Profile",
			"description": "",
			"collectionId": "478c3c91-1baf-5e1c-c2e9-82b4eb3697f3",
			"method": "POST",
			"headers": "Content-Type: application/json\nAuthorization: Token {{token}}",
			"data": [],
			"rawModeData": "",
			"pathVariables": {},
			"url": "{{apiUrl}}/profiles/jack/follow",
			"responses": [],
			"folder": "ecf28a77-b8ba-dbe7-8414-22068309c960",
			"preRequestScript": "",
			"tests": ""
		},
		{
			"id": "3fef2717-e09a-1bb5-bb05-ce7a385e308a",
			"name": "Login and Remember Token",
			"description": "",
			"collectionId": "478c3c91-1baf-5e1c-c2e9-82b4eb3697f3",
			"method": "POST",
			"headers": "Content-Type: application/json",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\"user\":{\"email\":\"john@jacob.com\", \"password\":\"johnnyjacob\"}}",
			"pathVariables": {},
			"tests": "var responseJSON = JSON.parse(responseBody);\n\ntests['Response contains \"user\" property'] = responseJSON.hasOwnProperty('user');\n\nvar user = responseJSON.user || {};\n\ntests['User has \"id\" property'] = user.hasOwnProperty('id');\ntests['User has \"email\" property'] = user.hasOwnProperty('email');\ntests['User has \"username\" property'] = user.hasOwnProperty('username');\ntests['User has \"bio\" property'] = user.hasOwnProperty('bio');\ntests['User has \"image\" property'] = user.hasOwnProperty('image');\ntests['User has \"token\" property'] = user.hasOwnProperty('token');\n\nif(tests['User has \"token\" property']){\n    postman.setEnvironmentVariable('token', user.token);\n}\n\ntests['Environment variable \"token\" has been set'] = environment.token === user.token;\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/users/login",
			"responses": [],
			"folder": "b0d4ea73-8044-e698-4a38-b7761e618c0c"
		},
		{
			"id": "457099b5-9aa7-5141-403b-2b3373ad5fe9",
			"name": "All Tags",
			"description": "",
			"collectionId": "478c3c91-1baf-5e1c-c2e9-82b4eb3697f3",
			"method": "GET",
			"headers": "Content-Type: application/json\nAuthorization: Token {{token}}",
			"data": [],
			"rawModeData": "",
			"pathVariables": {},
			"tests": "var is200Response = responseCode.code === 200;\n\ntests['Response code is 200 OK'] = is200Response;\n\nif(is200Response){\n    var responseJSON = JSON.parse(responseBody);\n    \n    tests['Response contains \"tags\" property'] = responseJSON.hasOwnProperty('tags');\n    tests['\"tags\" property returned as array'] = Array.isArray(responseJSON.tags);\n}\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/tags",
			"responses": [],
			"folder": "3ed19ee5-3ef2-5d4c-34d7-a2055bbe8cff"
		},
		{
			"id": "4697ae3c-b900-3021-7962-877e1fe09cf1",
			"name": "Favorite Article",
			"description": "",
			"collectionId": "478c3c91-1baf-5e1c-c2e9-82b4eb3697f3",
			"method": "POST",
			"headers": "Content-Type: application/json\nAuthorization: Token {{token}}",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "",
			"pathVariables": {},
			"tests": "var responseJSON = JSON.parse(responseBody);\n\ntests['Response contains \"article\" property'] = responseJSON.hasOwnProperty('article');\n\nvar article = responseJSON.article || {};\n\ntests['Article has \"title\" property'] = article.hasOwnProperty('title');\ntests['Article has \"slug\" property'] = article.hasOwnProperty('slug');\ntests['Article has \"body\" property'] = article.hasOwnProperty('body');\ntests['Article has \"createdAt\" property'] = article.hasOwnProperty('createdAt');\ntests['Article\\'s \"createdAt\" property is an ISO 8601 timestamp'] = new Date(article.createdAt).toISOString() === article.createdAt;\ntests['Article has \"updatedAt\" property'] = article.hasOwnProperty('updatedAt');\ntests['Article\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = new Date(article.updatedAt).toISOString() === article.updatedAt;\ntests['Article has \"description\" property'] = article.hasOwnProperty('description');\ntests['Article has \"tagList\" property'] = article.hasOwnProperty('tagList');\ntests['Article\\'s \"tagList\" property is an Array'] = Array.isArray(article.tagList);\ntests['Article has \"author\" property'] = article.hasOwnProperty('author');\ntests['Article has \"favorited\" property'] = article.hasOwnProperty('favorited');\ntests[\"Article's 'favorited' property is true\"] = article.favorited === true;\ntests['Article has \"favoritesCount\" property'] = article.hasOwnProperty('favoritesCount');\ntests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);\ntests[\"Article's 'favoritesCount' property is greater than 0\"] = article.favoritesCount > 0;\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/articles/how-to-train-your-dragon/favorite",
			"responses": [],
			"folder": "4264e955-a40f-fe79-695f-c887996f5b55"
		},
		{
			"id": "5f05c878-3a95-e445-7a52-b0966de455e8",
			"name": "Update User",
			"description": "",
			"collectionId": "478c3c91-1baf-5e1c-c2e9-82b4eb3697f3",
			"method": "PUT",
			"headers": "Content-Type: application/json\nAuthorization: Token {{token}}",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\"user\":{\"email\":\"john@jacob.com\"}}",
			"pathVariables": {},
			"tests": "var responseJSON = JSON.parse(responseBody);\n\ntests['Response contains \"user\" property'] = responseJSON.hasOwnProperty('user');\n\nvar user = responseJSON.user || {};\n\ntests['User has \"id\" property'] = user.hasOwnProperty('id');\ntests['User has \"email\" property'] = user.hasOwnProperty('email');\ntests['User has \"username\" property'] = user.hasOwnProperty('username');\ntests['User has \"bio\" property'] = user.hasOwnProperty('bio');\ntests['User has \"image\" property'] = user.hasOwnProperty('image');\ntests['User has \"token\" property'] = user.hasOwnProperty('token');\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/user",
			"responses": [],
			"folder": "b0d4ea73-8044-e698-4a38-b7761e618c0c"
		},
		{
			"id": "87540037-28b7-912c-39ae-5e80ccee07ec",
			"name": "Current User",
			"description": "",
			"collectionId": "478c3c91-1baf-5e1c-c2e9-82b4eb3697f3",
			"method": "GET",
			"headers": "Content-Type: application/json\nAuthorization: Token {{token}}",
			"data": [],
			"rawModeData": "",
			"pathVariables": {},
			"tests": "var responseJSON = JSON.parse(responseBody);\n\ntests['Response contains \"user\" property'] = responseJSON.hasOwnProperty('user');\n\nvar user = responseJSON.user || {};\n\ntests['User has \"id\" property'] = user.hasOwnProperty('id');\ntests['User has \"email\" property'] = user.hasOwnProperty('email');\ntests['User has \"username\" property'] = user.hasOwnProperty('username');\ntests['User has \"bio\" property'] = user.hasOwnProperty('bio');\ntests['User has \"image\" property'] = user.hasOwnProperty('image');\ntests['User has \"token\" property'] = user.hasOwnProperty('token');\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/user",
			"responses": [],
			"folder": "b0d4ea73-8044-e698-4a38-b7761e618c0c"
		},
		{
			"id": "98b543e0-aa5c-04cc-fe7c-00754b154a00",
			"name": "Unit by Id",
			"description": "",
			"collectionId": "478c3c91-1baf-5e1c-c2e9-82b4eb3697f3",
			"method": "GET",
			"headers": "Content-Type: application/json",
			"data": [],
			"rawModeData": "",
			"pathVariables": {},
			"tests": "var is200Response = responseCode.code === 200;\n\ntests['Response code is 200 OK'] = is200Response;\n\nif(is200Response){\n    var responseJSON = JSON.parse(responseBody);\n\n    tests['Response contains \"articles\" property'] = responseJSON.hasOwnProperty('articles');\n    tests['Response contains \"articlesCount\" property'] = responseJSON.hasOwnProperty('articlesCount');\n    tests['articlesCount is an integer'] = Number.isInteger(responseJSON.articlesCount);\n\n    if(responseJSON.articles.length){\n        var article = responseJSON.articles[0];\n\n        tests['Article has \"title\" property'] = article.hasOwnProperty('title');\n        tests['Article has \"slug\" property'] = article.hasOwnProperty('slug');\n        tests['Article has \"body\" property'] = article.hasOwnProperty('body');\n        tests['Article has \"createdAt\" property'] = article.hasOwnProperty('createdAt');\n        tests['Article\\'s \"createdAt\" property is an ISO 8601 timestamp'] = new Date(article.createdAt).toISOString() === article.createdAt;\n        tests['Article has \"updatedAt\" property'] = article.hasOwnProperty('updatedAt');\n        tests['Article\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = new Date(article.updatedAt).toISOString() === article.updatedAt;\n        tests['Article has \"description\" property'] = article.hasOwnProperty('description');\n        tests['Article has \"tagList\" property'] = article.hasOwnProperty('tagList');\n        tests['Article\\'s \"tagList\" property is an Array'] = Array.isArray(article.tagList);\n        tests['Article has \"author\" property'] = article.hasOwnProperty('author');\n        tests['Article has \"favorited\" property'] = article.hasOwnProperty('favorited');\n        tests['Article has \"favoritesCount\" property'] = article.hasOwnProperty('favoritesCount');\n        tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);\n    } else {\n        tests['articlesCount is 0 when feed is empty'] = responseJSON.articlesCount === 0;\n    }\n}\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/articles?author=jack",
			"responses": [],
			"folder": "4264e955-a40f-fe79-695f-c887996f5b55"
		},
		{
			"id": "9ce023c4-cf08-4e29-86eb-c1ed7529a24c",
			"name": "All Comments for Article",
			"description": "",
			"collectionId": "478c3c91-1baf-5e1c-c2e9-82b4eb3697f3",
			"method": "GET",
			"headers": "Content-Type: application/json",
			"data": [],
			"rawModeData": "",
			"pathVariables": {},
			"tests": "var is200Response = responseCode.code === 200\n\ntests['Response code is 200 OK'] = is200Response;\n\nif(is200Response){\n    var responseJSON = JSON.parse(responseBody);\n\n    tests['Response contains \"comments\" property'] = responseJSON.hasOwnProperty('comments');\n\n    if(responseJSON.comments.length){\n        var comment = responseJSON.comments[0];\n\n        tests['Comment has \"id\" property'] = comment.hasOwnProperty('id');\n        tests['Comment has \"body\" property'] = comment.hasOwnProperty('body');\n        tests['Comment has \"createdAt\" property'] = comment.hasOwnProperty('createdAt');\n        tests['\"createdAt\" property is an ISO 8601 timestamp'] = new Date(comment.createdAt).toISOString() === comment.createdAt;\n        tests['Comment has \"updatedAt\" property'] = comment.hasOwnProperty('updatedAt');\n        tests['\"updatedAt\" property is an ISO 8601 timestamp'] = new Date(comment.updatedAt).toISOString() === comment.updatedAt;\n        tests['Comment has \"author\" property'] = comment.hasOwnProperty('author');\n    }\n}\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/articles/how-to-train-your-dragon/comments",
			"responses": [],
			"folder": "e0d006fc-434a-6454-90be-674ba6c423e9"
		},
		{
			"id": "9f415dd9-be5b-d2dc-74f2-3bb3b18ff41c",
			"name": "Create Article",
			"description": "",
			"collectionId": "478c3c91-1baf-5e1c-c2e9-82b4eb3697f3",
			"method": "POST",
			"headers": "Content-Type: application/json\nAuthorization: Token {{token}}",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\"article\":{\"title\":\"How to train your dragon\", \"body\":\"Very carefully.\", \"tagList\":[\"dragons\",\"training\"]}}",
			"pathVariables": {},
			"tests": "var responseJSON = JSON.parse(responseBody);\n\ntests['Response contains \"article\" property'] = responseJSON.hasOwnProperty('article');\n\nvar article = responseJSON.article || {};\n\ntests['Article has \"title\" property'] = article.hasOwnProperty('title');\ntests['Article has \"slug\" property'] = article.hasOwnProperty('slug');\ntests['Article has \"body\" property'] = article.hasOwnProperty('body');\ntests['Article has \"createdAt\" property'] = article.hasOwnProperty('createdAt');\ntests['Article\\'s \"createdAt\" property is an ISO 8601 timestamp'] = new Date(article.createdAt).toISOString() === article.createdAt;\ntests['Article has \"updatedAt\" property'] = article.hasOwnProperty('updatedAt');\ntests['Article\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = new Date(article.updatedAt).toISOString() === article.updatedAt;\ntests['Article has \"description\" property'] = article.hasOwnProperty('description');\ntests['Article has \"tagList\" property'] = article.hasOwnProperty('tagList');\ntests['Article\\'s \"tagList\" property is an Array'] = Array.isArray(article.tagList);\ntests['Article has \"author\" property'] = article.hasOwnProperty('author');\ntests['Article has \"favorited\" property'] = article.hasOwnProperty('favorited');\ntests['Article has \"favoritesCount\" property'] = article.hasOwnProperty('favoritesCount');\ntests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/articles",
			"responses": [],
			"folder": "4264e955-a40f-fe79-695f-c887996f5b55"
		},
		{
			"id": "b71d4313-989d-493e-c31d-b9706f8388d9",
			"name": "Delete Comment for Article",
			"description": "",
			"collectionId": "478c3c91-1baf-5e1c-c2e9-82b4eb3697f3",
			"method": "DELETE",
			"headers": "Content-Type: application/json\nAuthorization: Token {{token}}",
			"data": [],
			"rawModeData": "",
			"pathVariables": {},
			"url": "{{apiUrl}}/articles/how-to-train-your-dragon/comments/1",
			"responses": [],
			"folder": "e0d006fc-434a-6454-90be-674ba6c423e9",
			"preRequestScript": "",
			"tests": ""
		},
		{
			"id": "dcad3f3e-c913-c5e0-1ec4-3506ed9043f5",
			"name": "Unfavorite Article",
			"description": "",
			"collectionId": "478c3c91-1baf-5e1c-c2e9-82b4eb3697f3",
			"method": "DELETE",
			"headers": "Content-Type: application/json\nAuthorization: Token {{token}}",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "",
			"pathVariables": {},
			"tests": "var responseJSON = JSON.parse(responseBody);\n\ntests['Response contains \"article\" property'] = responseJSON.hasOwnProperty('article');\n\nvar article = responseJSON.article || {};\n\ntests['Article has \"title\" property'] = article.hasOwnProperty('title');\ntests['Article has \"slug\" property'] = article.hasOwnProperty('slug');\ntests['Article has \"body\" property'] = article.hasOwnProperty('body');\ntests['Article has \"createdAt\" property'] = article.hasOwnProperty('createdAt');\ntests['Article\\'s \"createdAt\" property is an ISO 8601 timestamp'] = new Date(article.createdAt).toISOString() === article.createdAt;\ntests['Article has \"updatedAt\" property'] = article.hasOwnProperty('updatedAt');\ntests['Article\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = new Date(article.updatedAt).toISOString() === article.updatedAt;\ntests['Article has \"description\" property'] = article.hasOwnProperty('description');\ntests['Article has \"tagList\" property'] = article.hasOwnProperty('tagList');\ntests['Article\\'s \"tagList\" property is an Array'] = Array.isArray(article.tagList);\ntests['Article has \"author\" property'] = article.hasOwnProperty('author');\ntests['Article has \"favorited\" property'] = article.hasOwnProperty('favorited');\ntests['Article has \"favoritesCount\" property'] = article.hasOwnProperty('favoritesCount');\ntests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);\ntests[\"Article's \\\"favorited\\\" property is true\"] = article.favorited === false;\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/articles/how-to-train-your-dragon/favorite",
			"responses": [],
			"folder": "4264e955-a40f-fe79-695f-c887996f5b55"
		},
		{
			"id": "e2b58cea-164a-6f7e-475f-f5e7cd5445c8",
			"name": "Update Article",
			"description": "",
			"collectionId": "478c3c91-1baf-5e1c-c2e9-82b4eb3697f3",
			"method": "PUT",
			"headers": "Content-Type: application/json\nAuthorization: Token {{token}}",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\"article\":{\"body\":\"With two hands\"}}",
			"pathVariables": {},
			"tests": "var responseJSON = JSON.parse(responseBody);\n\ntests['Response contains \"article\" property'] = responseJSON.hasOwnProperty('article');\n\nvar article = responseJSON.article || {};\n\ntests['Article has \"title\" property'] = article.hasOwnProperty('title');\ntests['Article has \"slug\" property'] = article.hasOwnProperty('slug');\ntests['Article has \"body\" property'] = article.hasOwnProperty('body');\ntests['Article has \"createdAt\" property'] = article.hasOwnProperty('createdAt');\ntests['Article\\'s \"createdAt\" property is an ISO 8601 timestamp'] = new Date(article.createdAt).toISOString() === article.createdAt;\ntests['Article has \"updatedAt\" property'] = article.hasOwnProperty('updatedAt');\ntests['Article\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = new Date(article.updatedAt).toISOString() === article.updatedAt;\ntests['Article has \"description\" property'] = article.hasOwnProperty('description');\ntests['Article has \"tagList\" property'] = article.hasOwnProperty('tagList');\ntests['Article\\'s \"tagList\" property is an Array'] = Array.isArray(article.tagList);\ntests['Article has \"author\" property'] = article.hasOwnProperty('author');\ntests['Article has \"favorited\" property'] = article.hasOwnProperty('favorited');\ntests['Article has \"favoritesCount\" property'] = article.hasOwnProperty('favoritesCount');\ntests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/articles/how-to-train-your-dragon",
			"responses": [],
			"folder": "4264e955-a40f-fe79-695f-c887996f5b55"
		},
		{
			"id": "f1a1cf78-2555-fd8e-b530-26a41063a42a",
			"name": "Register",
			"description": "",
			"collectionId": "478c3c91-1baf-5e1c-c2e9-82b4eb3697f3",
			"method": "POST",
			"headers": "Content-Type: application/json",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\"user\":{\"email\":\"john@jacob.com\", \"password\":\"johnnyjacob\", \"username\":\"johnjacob\"}}",
			"pathVariables": {},
			"tests": "var responseJSON = JSON.parse(responseBody);\n\ntests['Response contains \"user\" property'] = responseJSON.hasOwnProperty('user');\n\nvar user = responseJSON.user || {};\n\ntests['User has \"id\" property'] = user.hasOwnProperty('id');\ntests['User has \"email\" property'] = user.hasOwnProperty('email');\ntests['User has \"username\" property'] = user.hasOwnProperty('username');\ntests['User has \"bio\" property'] = user.hasOwnProperty('bio');\ntests['User has \"image\" property'] = user.hasOwnProperty('image');\ntests['User has \"token\" property'] = user.hasOwnProperty('token');\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/users",
			"responses": [],
			"folder": "b0d4ea73-8044-e698-4a38-b7761e618c0c"
		},
		{
			"id": "fcf0c53c-7b69-1344-86e9-3ab401785172",
			"name": "Single Article by slug",
			"description": "",
			"collectionId": "478c3c91-1baf-5e1c-c2e9-82b4eb3697f3",
			"method": "GET",
			"headers": "Content-Type: application/json",
			"data": [],
			"rawModeData": "",
			"pathVariables": {},
			"tests": "var responseJSON = JSON.parse(responseBody);\n\ntests['Response contains \"article\" property'] = responseJSON.hasOwnProperty('article');\n\nvar article = responseJSON.article || {};\n\ntests['Article has \"title\" property'] = article.hasOwnProperty('title');\ntests['Article has \"slug\" property'] = article.hasOwnProperty('slug');\ntests['Article has \"body\" property'] = article.hasOwnProperty('body');\ntests['Article has \"createdAt\" property'] = article.hasOwnProperty('createdAt');\ntests['Article\\'s \"createdAt\" property is an ISO 8601 timestamp'] = new Date(article.createdAt).toISOString() === article.createdAt;\ntests['Article has \"updatedAt\" property'] = article.hasOwnProperty('updatedAt');\ntests['Article\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = new Date(article.updatedAt).toISOString() === article.updatedAt;\ntests['Article has \"description\" property'] = article.hasOwnProperty('description');\ntests['Article has \"tagList\" property'] = article.hasOwnProperty('tagList');\ntests['Article\\'s \"tagList\" property is an Array'] = Array.isArray(article.tagList);\ntests['Article has \"author\" property'] = article.hasOwnProperty('author');\ntests['Article has \"favorited\" property'] = article.hasOwnProperty('favorited');\ntests['Article has \"favoritesCount\" property'] = article.hasOwnProperty('favoritesCount');\ntests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);\n",
			"preRequestScript": "",
			"url": "{{apiUrl}}/articles/how-to-train-your-dragon",
			"responses": [],
			"folder": "4264e955-a40f-fe79-695f-c887996f5b55"
		}
	]
}